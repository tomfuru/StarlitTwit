★Twitterクライアント仕様落書き

・<id>ではなく<id_str>のほうを使うべき->JSONじゃないと分かれてない？
・Retweeterはページ制(カーソル制じゃない)のでページを見て0件だったらそれ以上とれないように
・cursorは0が終わり

■未実装設定

■フィルタリング------------------------------------------------------------------------------------
1.対象ユーザー
・全員
・フォローしている人
・フォローしていない人(UserStreamのみ)
・ユーザー名(パターンリスト，各々正規表現)

2.対象パターン
・全部
・Retweetかどうか
・Replyかどうか
・通常Tweetかどうか
・本文(パターンリスト，各々正規表現)
・使用クライアント(パターンリスト，各々正規表現)

■UserStream---------------------------------------------------------------------------------------
未
・Location Deletion Notices
・Event-Retweet*

既
・Tweet
・DirectMessage
・DeleteTweet
・Track Limit Notices : <limit><track>(num)</track></limit>
・Event-Follow
・Event-Block*
・Event-Favorite*
・Event-List*
・Event-Profile*


・別スレッドでデータは取得
・別スレッドはキャンセル可能

●起動時
・Home,Reply,History,Directを1度取得
・Home,Reply,History,Directの自動更新を止める

●終了時
・Home,Reply,History,Directの自動更新を復活

■画面仕様------------------------------------------------------------------------------------
●プロフィール表示フォーム
種類
(共通機能)
 -ホームをブラウザで開く
・自分
 *編集可能
#-所有リスト表示(編集可能)
 -所属リスト表示
・他人
 -フォロー/フォロー解除
 -ブロック/ブロック解除
 -フレンド表示
 -フォロワー表示
 -最近の発言表示
 -所有リスト表示
 -所属リスト表示
 -ユーザータブ作成

●ユーザー表示フォーム
種類
(共通機能)
 -フォロー/フォロー解除
 -ブロック/ブロック解除
 -プロフィール表示
 -最近の発言表示
・自分のフレンド
 *フォロー解除したら削除
 *ブロックしたら削除
・自分のフォロワー
 @フォロー中表示
 *ブロックしたら削除
・他人のフレンド : UserName
 @フォロー中表示
・他人のフォロワー : UserName
 @フォロー中表示
・ある発言のリツイーター : StatusID
 @フォロー中表示
・リストのメンバー : UserName(Owner), ListID
#*リストから削除
 @フォロー中表示
・リストのフォロワー : UserName(Owner), ListID
 @フォロー中表示
・自分のブロックユーザー
#*ブロック解除

●リスト表示フォーム
種類
(共通機能)
 -リストをタブに追加
 -リストの所属者表示
 -リストのフォロワー表示
 -最近の発言表示
・自分のリスト
 @リストのアクセスタイプ表示
 *編集可能
#-リスト追加
#*リスト編集
#*リスト削除
#*リストにユーザー追加/削除 -> Profile?
・他人のリスト : UserName
 @リスト所有者表示
#-リストのフォロー/フォロー解除
・自分が所属しているリスト
 @リスト所有者表示
#-リストのフォロー/フォロー解除
・他人が所属しているリスト : UserName
 @リスト所有者表示
#-リストのフォロー/フォロー解除
・自分がフォローしているリスト
 @リスト所有者表示
#-リストのフォロー解除
 *フォロー解除時削除
・他人がフォローしているリスト : UserName
 @リスト所有者表示
#-リストのフォロー/フォロー解除

●発言表示フォーム
(共通機能)
 -返信
 -引用
 -Retweet
 -DirectMessage
 -会話を表示(Replyのみ)
 -お気に入りに追加/お気に入りから削除
 -ユーザーメニュー
 -ハッシュタグメニュー
 -URLメニュー
 -リツイートしたユーザーメニュー
種類
・あるユーザーの発言 : UserName
・会話 : StatusID
・自分のリツイート
 -削除
 *削除したら消去
・フレンドのリツイート
・フレンドの自分へのリツイート
・リストの発言 : UserName(Owner), ListID
・自分のお気に入り
#*お気に入り削除したら消去
・他人のお気に入り : UserName

●メインフォーム上部
・発言入力テキストボックス
・発言ボタン
・(単独リプライ時のみ)リプライ先ラベル/リプライ解除ボタン

・ユーザー情報
 -(protected)screen_name/user_name	未認証時は(未認証)
 -following数
 -follower数

●発言表示コントロール
case 上揃え(下揃えでない時)
case 下揃え(矢印キーで下にスクロールした時 or Scrollableかつ一番下の行が全て見える時)

1.上揃えの時
注目する行から下に並べていく．最後がきて，まだスペースがある場合はずらしてから下揃えに移行

2.下揃えの時(Unscrollableの時は考えない)
注目する行から上に並べていく．

●行右クリックメニュー
・返信：DM以外のメッセージに対して可能
・引用：DM，Protectedユーザーの発言以外のメッセージに対して可能
・リツイート：RTメッセージ，又は(自分，Protectedユーザー，DM)以外の発言に対して可能
・会話表示：Reply先があるメッセージに対して可能

↓ツイートをブラウザで開く
・このツイート
・リプライ先ツイート(Replyメッセージのみ)
↓ユーザー
・プロフィールを表示する
・発言を表示する
・タブを作成する
・ユーザーのリストのタブを作成する
・ユーザーのホーム
(Combobox)
↓ハッシュタグ
・タブを作成する
(Combobox)
↓URL
・外部ブラウザで表示する
・内部ブラウザで表示する
(Combobox)

●タブ
・表示時，Draw抑制・Layout抑制→行をそれぞれInvalidate()．RowとLineはDoubleBuffered．

●発言行
最下部のデータは下線を赤に

■プログラム仕様------------------------------------------------------------------------------------
●非同期処理(フォーム上)【未】
・フォーム消去時に正常終了できるようにする必要がある
 1.フォーム消去要請
 2.非同期処理キャンセル通知
 4.フォーム終了
，ストップ
 3.非同期処理キャンセル，終了
 ●ステータスラベル仕様
用途
・待機中表示
 - 表示終了は待機終了時
・処理中表示
 - 表示終了は処理終了時
・処理完了表示
・エラー表示
 - 表示は1回(必ず行う)
 - 表示は1回(必ず行う)

●発言データ
・Retweetの時は，(Retweetの発言)の内部に(Retweeterの発言)を持つ形

●データ仕様
・設定データはstaticで持つ
・タブページは必ず表示コントロールを1つもち，それは辞書に登録している

●その他規則
・OpenURLRequestは，内部ブラウザを使うかはEventArgsで見る
・ImageListWrapperからのImageList参照はControlへの設定時のみで画像を操作する場合はImageListWrapperのメソッドを使う

●タブ作成フォーム
・特定ユーザーのツイート
 -ユーザー名
・キーワード
 -検索ワード
・リスト
 -string リスト所有者名
 -string リスト名
 -bool パブリックかどうか

■設定---------------------------------------------------------------------------------------------
・フォーム項目
 -フォーム位置
 -フォームサイズ
 -最大化終了されたか

・以下の各項目について・・・
 -タイムライン
 -リプライ
 -発言履歴
 -ダイレクトメッセージ
以下の項目
 -初期取得数
 -更新時取得数
 -取得間隔(秒)

 ・作成タブについて・・・
  -タブ表示文字
  -検索オプション
   *検索種類(Enum)
   *ID情報(long)
   *文字列情報(string)
  -初期取得数
  -更新時取得数
  -取得間隔(秒)

・アイコン表示有無
・アイコンのサイズ
・通常ツイート/自分へのReply/他人へのReply/RT　について　タイトル/テキスト　のフォント
・通常ツイート/自分へのReply/他人へのReply/RT　について背景色

・画像サムネイル表示有無
・画像サムネイル複数時表示間隔

・リプライのツールチップ表示有無
・リプライのツールチップ表示深さ

・リプライ/DM新着バルーン表示有無

・通常時，RT時，DM時,Search時の上段フォーマット
・引用種類

・ヘッダー / フッター

・内部ウェブブラウザ使用有無
・外部ウェブブラウザの実行ファイルのパス

・タブ情報
・トークン情報

■つぶやき関連--------------------------------------------------------------------------------------
-リプライ
・リプライ対象ツイートを右クリックし"返信"をクリック
　リプライ解除条件：テキストボックスが"@(リプライ対象ユーザー名)"から始まらなくなった瞬間 or ×ボタン押下時
・

-引用
Type1「QT @(ユーザー名): (発言)」
Type2「RT @(ユーザー名): (発言)」
Type3「“@(ユーザー名): (発言)”」

■名前表示フォーマット-------------------------------------------------------------------------------
・通常投稿
$Locked$ : ロックされている時に'◆'(RT,DM,Searchは不可)
$Favorited$ : お気に入りの時に'★'(DM,Searchは不可)
$Name$ : ユーザー名
$ScreenName$ : Screen名(Searchのみ使用不可)
$DateTime(yyyy/MM/dd hh:mm:ss)$ : 日付と時刻(括弧内はフォーマット)
$RTDateTime(yyyy/MM/dd hh:mm:ss)$ : RT元発言の日付と時刻(括弧内はフォーマット)(RTのみ使用可)
$Source$ : 投稿クライアント名(DMは使用不可)
\n : 改行
$Retweeter$ : リツイートした人のScreen名(RTのみ使用可)
$Recipient$ : DMを受け取った人のScreen名(DMのみ使用可)


●更新スレッド
●自動更新
■排他制御・並行動作用ロックについて------------------------------------------------------------------

・設定/認証/タブ編集
いつでも動作可能
・タブ追加/タブ削除
タブforeach外で動作可能

1.未認証時
全ての要ロック機能は動作可能．機能終了後もスレッドに関する処理はない．

2.認証済時
全ての要ロック機能はシグナルが来るまで待機．機能開始時にスレッドを止め，機能終了後に再開させる．

●メモ===================================================================================
・画像URLは_normal.(ext)等になっていて，biggerとminiが恐らくある